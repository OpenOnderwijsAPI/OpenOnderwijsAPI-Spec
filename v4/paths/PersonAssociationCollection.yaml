get:
  summary: GET /persons/{personId}/associations
  description: Get a list of all associations for an individual person.
  tags:
    - persons
  parameters:
    - name: personId
      in: path
      description: Person ID
      required: true
      schema:
        type: string
        format: uuid
    - $ref: '../parameters/pageSize.yaml'
    - $ref: '../parameters/pageNumber.yaml'
    - name: type
      in: query
      description: Filter by association type
      required: false
      schema:
        type: string
        enum:
          - programOffering
          - courseOffering
          - componentOffering
    - name: role
      in: query
      description: Filter by role
      required: false
      schema:
        $ref: '../enumerations/associationRole.yaml'
    - name: state
      in: query
      description: Filter by state
      required: false
      schema:
        $ref: '../enumerations/associationState.yaml'
    - name: result-state
      in: query
      description: Filter by result state
      required: false
      schema:
        $ref: '../enumerations/resultState.yaml'
    - name: sort
      in: query
      description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - associationId
            - -associationId
        default:
        - associationId
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            required:
              - pageSize
              - pageNumber
              - items
            properties:
              pageSize:
                type: integer
                format: int32
                description: The number of items per page
              pageNumber:
                type: integer
                format: int32
                description: The current page number
              items:
                type: array
                items:
                  oneOf:
                    - allOf:
                        - $ref: '../schemas/ProgramOfferingAssociation.yaml'
                        - type: object
                          required:
                            - offering
                          properties:
                            offering:
                              $ref: '../schemas/ProgramOffering.yaml'
                            academicSession:
                              $ref: '../schemas/AcademicSession.yaml'
                    - allOf:
                        - $ref: '../schemas/CourseOfferingAssociation.yaml'
                        - type: object
                          required:
                            - offering
                          properties:
                            offering:
                              $ref: '../schemas/CourseOffering.yaml'
                            academicSession:
                              $ref: '../schemas/AcademicSession.yaml'
                    - allOf:
                        - $ref: '../schemas/ComponentOfferingAssociation.yaml'
                        - type: object
                          required:
                            - offering
                          properties:
                            offering:
                              $ref: '../schemas/ComponentOffering.yaml'
                            academicSession:
                              $ref: '../schemas/AcademicSession.yaml'
    '404':
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '../schemas/Problem.yaml'

post:
  summary: POST /persons/{personId}/associations
  description: Add a single association.
  tags:
    - persons
  operationId: addAssociations
  requestBody:
    description: A JSON object containing association information
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            personId:
              type: string
              description: Unique id of this person
              format: uuid
              example: 123e4567-e89b-12d3-a456-426614174000
            role:
              $ref: '../enumerations/associationRole.yaml'
            offeringId:
              type: string
              description: Unique id of this offering
              format: uuid
      multipart/form-data:
        schema:
          type: object
          properties:
            personId:
              type: string
              description: Unique id of this person
              format: uuid
              example: 123e4567-e89b-12d3-a456-426614174000
            role:
              $ref: '../enumerations/associationRole.yaml'
            offeringId:
              type: string
              description: Unique id of this offering
              format: uuid
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              associationId:
                type: string
                description: Unique id of this association
                format: uuid
                example: 123e4567-e89b-12d3-a456-1237891417400
    '405':
      description: Invalid input