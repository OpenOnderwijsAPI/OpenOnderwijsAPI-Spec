get:
  summary: GET /persons
  description: Get an ordered list of all persons.
  tags:
    - persons
  parameters:
    - $ref: '../parameters/pageSize.yaml'
    - $ref: '../parameters/pageNumber.yaml'
    - $ref: '../parameters/search.yaml'
    - name: affiliations
      in: query
      description: Filter by affiliations
      required: false
      schema:
        $ref: '../enumerations/personAffiliations.yaml'
    - name: sort
      in: query
      description: 'Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]'
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - personId
            - givenName
            - surName
            - displayName
            - -personId
            - -givenName
            - -surName
            - -displayName
        default:
        - personId
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            required:
              - pageSize
              - pageNumber
              - items
            properties:
              pageSize:
                type: integer
                format: int32
                description: The number of items per page
              pageNumber:
                type: integer
                format: int32
                description: The current page number
              items:
                type: array
                items:
                  $ref: '../schemas/Person.yaml'

post:
  summary: POST /persons
  description: Add a person to the records of the institution
  tags:
    - persons
  operationId: addPerson
  requestBody:
    description: A JSON object containing person information
    required: true
    content:
      application/json:
        schema:
          $ref: '../schemas/PersonMin.yaml'
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              personId:
                type: string
                description: Unique id of this person
                format: uuid
                example: 123e4567-e89b-12d3-a456-426614174000
    '405':
      description: Invalid input

